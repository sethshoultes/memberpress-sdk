!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["memberpress-sdk"]=t():e["memberpress-sdk"]=t()}(this,(()=>{return e={44:(e,t,s)=>{const{MemberPressSDK:r}=s(764);e.exports={MemberPressSDK:r},e.exports.default={MemberPressSDK:r}},764:e=>{class t{constructor(e){this.apiKey=e.apiKey,this.baseUrl=e.baseUrl,this.debug=e.debug||!1,this.cacheTimeout=e.cacheTimeout||3e5,this.cache=new Map,this.members={create:this.createMember.bind(this),get:this.getMember.bind(this),updateStatus:this.updateMemberStatus.bind(this),list:this.listMembers.bind(this),checkAccess:this.checkMemberAccess.bind(this)},this.memberships={list:this.listMemberships.bind(this),get:this.getMembership.bind(this)},this.transactions={list:this.listTransactions.bind(this),get:this.getTransaction.bind(this)},this.subscriptions={list:this.listSubscriptions.bind(this),get:this.getSubscription.bind(this),cancel:this.cancelSubscription.bind(this)},this.debug&&console.log("MemberPress SDK initialized with:",{baseUrl:this.baseUrl,debug:this.debug,cacheTimeout:this.cacheTimeout})}async request(e,t={}){const s=`${this.baseUrl}/${e}`,r=`${t.method||"GET"}-${s}-${JSON.stringify(t.body||{})}`;if("GET"===t.method||!t.method){const e=this.cache.get(r);if(e&&Date.now()-e.timestamp<this.cacheTimeout)return this.debug&&console.log("Using cached response for:",s),e.data}const i={"Content-Type":"application/json",Authorization:`${this.apiKey}`,...t.headers};try{this.debug&&console.log(`Making ${t.method||"GET"} request to:`,s);const e=await fetch(s,{method:t.method||"GET",headers:i,body:t.body?JSON.stringify(t.body):void 0}),n=await e.json();if(!e.ok)throw new Error(`API Error: ${n.message||e.statusText}`);return"GET"!==t.method&&t.method||this.cache.set(r,{timestamp:Date.now(),data:n}),n}catch(e){throw this.debug&&console.error("API Request Error:",e),e}}async createMember(e){return this.request("members",{method:"POST",body:e})}async getMember(e){return this.request(`members/${e}`)}async updateMemberStatus(e,t){return this.request(`members/${e}/status`,{method:"PUT",body:{status:t}})}async listMembers(e={}){const t=new URLSearchParams;Object.entries(e).forEach((([e,s])=>{t.append(e,s)}));const s=t.toString();return this.request("members"+(s?`?${s}`:""))}async checkMemberAccess(e,t){return this.request(`members/${e}/access/${t}`)}async listMemberships(e={}){const t=new URLSearchParams;Object.entries(e).forEach((([e,s])=>{t.append(e,s)}));const s=t.toString();return this.request("memberships"+(s?`?${s}`:""))}async getMembership(e){return this.request(`memberships/${e}`)}async listTransactions(e={}){const t=new URLSearchParams;Object.entries(e).forEach((([e,s])=>{t.append(e,s)}));const s=t.toString();return this.request("transactions"+(s?`?${s}`:""))}async getTransaction(e){return this.request(`transactions/${e}`)}async listSubscriptions(e={}){const t=new URLSearchParams;Object.entries(e).forEach((([e,s])=>{t.append(e,s)}));const s=t.toString();return this.request("subscriptions"+(s?`?${s}`:""))}async getSubscription(e){return this.request(`subscriptions/${e}`)}async cancelSubscription(e){return this.request(`subscriptions/${e}/cancel`,{method:"PUT"})}}e.exports&&(e.exports={MemberPressSDK:t}),"undefined"!=typeof window&&(window.MemberPressSDK=t)}},t={},function s(r){var i=t[r];if(void 0!==i)return i.exports;var n=t[r]={exports:{}};return e[r](n,n.exports,s),n.exports}(44).default;var e,t}));